[33mcommit ad06c0381304fce9d97ea655b0d827f693128bda[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m
Author: YEE <yeesc0810@yahoo.com>
Date:   Thu May 16 17:21:30 2019 +0800

    add

[1mdiff --git a/ASE_CW2/rational-cmdline.cpp b/ASE_CW2/rational-cmdline.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..26d2fa3[m
[1m--- /dev/null[m
[1m+++ b/ASE_CW2/rational-cmdline.cpp[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32m#include <iostream>[m
[32m+[m[32m#include <sstream>[m
[32m+[m[32m#include <string>[m
[32m+[m
[32m+[m[32m#include "rational.h"[m
[32m+[m
[32m+[m[32m/* Basic command line interface for experimenting with rational arithmetic.[m
[32m+[m[32m * Three command-line arguments are expected (in addition to the implicit file path):[m
[32m+[m[32m *[m
[32m+[m[32m * 1st - A string representation of a rational number (see rational.h)[m
[32m+[m[32m *[m
[32m+[m[32m * 2nd - One of the four operators: + , - , * , /[m
[32m+[m[32m *[m
[32m+[m[32m * 3rd - A string representation of a rational number (see rational.h)[m
[32m+[m[32m *[m
[32m+[m[32m * For example: ./rational-cmdline "1/3" "*" "4/9"[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32musing namespace ExactArithmetic;[m
[32m+[m
[32m+[m[32musing std::cout;[m
[32m+[m[32musing std::endl;[m
[32m+[m
[32m+[m[32mint main(int argc, const char * argv[])[m
[32m+[m[32m{[m
[32m+[m[32m    // Remember, argv[0] is the filename[m
[32m+[m[32m    if (argc != 4)[m
[32m+[m[32m    {[m
[32m+[m[32m        cout << "Incorrect number of arguments, expected 3: Rational Operator Rational" << endl;[m
[32m+[m[32m        cout << "For example: " << argv[0] << " \"1/3\" \"*\" \"4/9\"" << endl;[m
[32m+[m[32m        return 1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    std::string op = argv[2];[m
[32m+[m[32m    std::istringstream xstr(argv[1]);[m
[32m+[m[32m    std::istringstream ystr(argv[3]);[m
[32m+[m
[32m+[m[32m    Rational x, y;[m
[32m+[m[32m    xstr >> x;[m
[32m+[m[32m    ystr >> y;[m
[32m+[m
[32m+[m[32m    Rational result;[m
[32m+[m[32m    if (op == "+")[m
[32m+[m[32m    {[m
[32m+[m[32m        result = x + y;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (op == "-")[m
[32m+[m[32m    {[m
[32m+[m[32m        result = x - y;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (op == "*")[m
[32m+[m[32m    {[m
[32m+[m[32m        result = x * y;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (op == "/")[m
[32m+[m[32m    {[m
[32m+[m[32m        result = x / y;[m
[32m+[m[32m    }[m
[32m+[m[32m    else[m
[32m+[m[32m    {[m
[32m+[m[32m        cout << "Unrecognised operator" << endl;[m
[32m+[m[32m        return 1;[m
[32m+[m[32m    }[m
[32m+[m[32m    cout << result << endl;[m
[32m+[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m
[1mdiff --git a/ASE_CW2/rational-interactive.cpp b/ASE_CW2/rational-interactive.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..97cf714[m
[1m--- /dev/null[m
[1m+++ b/ASE_CW2/rational-interactive.cpp[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32m#include <iostream>[m
[32m+[m
[32m+[m[32m#include "rational.h"[m
[32m+[m
[32m+[m[32musing namespace ExactArithmetic;[m
[32m+[m
[32m+[m[32musing std::cout;[m
[32m+[m[32musing std::cin;[m
[32m+[m[32musing std::endl;[m
[32m+[m
[32m+[m[32mint main()[m
[32m+[m[32m{[m
[32m+[m
[32m+[m[32m    cout << "Enter the left operand (e.g. 1/3): ";[m
[32m+[m[32m    Rational x;[m
[32m+[m[32m    cin >> x;[m
[32m+[m
[32m+[m[32m    cout << "Enter the operator (+, -, * or /): ";[m
[32m+[m[32m    std::string op;[m
[32m+[m[32m    cin >> op;[m
[32m+[m
[32m+[m[32m    cout << "Enter the right operand (e.g. 4/9): ";[m
[32m+[m[32m    Rational y;[m
[32m+[m[32m    cin >> y;[m
[32m+[m
[32m+[m[32m    Rational result;[m
[32m+[m[32m    if (op == "+")[m
[32m+[m[32m    {[m
[32m+[m[32m        result = x + y;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (op == "-")[m
[32m+[m[32m    {[m
[32m+[m[32m        result = x - y;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (op == "*")[m
[32m+[m[32m    {[m
[32m+[m[32m        result = x * y;[m
[32m+[m[32m    }[m
[32m+[m[32m    else if (op == "/")[m
[32m+[m[32m    {[m
[32m+[m[32m        result = x / y;[m
[32m+[m[32m    }[m
[32m+[m[32m    else[m
[32m+[m[32m    {[m
[32m+[m[32m        cout << "Unrecognised operator" << endl;[m
[32m+[m[32m        return 1;[m
[32m+[m[32m    }[m
[32m+[m[32m    cout << result << endl;[m
[32m+[m
[32m+[m[32m    return 0;[m
[32m+[m[32m}[m

[33mcommit c2c88cf88f21cb5263342af6bdc6c54e591e49e1[m
Author: YEE <yeesc0810@yahoo.com>
Date:   Thu May 16 17:18:07 2019 +0800

    third commit

[1mdiff --git a/.vs/ASE_CW2/v15/.suo b/.vs/ASE_CW2/v15/.suo[m
[1mnew file mode 100644[m
[1mindex 0000000..47b7360[m
Binary files /dev/null and b/.vs/ASE_CW2/v15/.suo differ
[1mdiff --git a/ASE_CW2/ASE_CW2.vcxproj b/ASE_CW2/ASE_CW2.vcxproj[m
[1mindex 32684a3..bc8aca2 100644[m
[1m--- a/ASE_CW2/ASE_CW2.vcxproj[m
[1m+++ b/ASE_CW2/ASE_CW2.vcxproj[m
[36m@@ -115,8 +115,27 @@[m
     </Link>[m
   </ItemDefinitionGroup>[m
   <ItemGroup>[m
[32m+[m[32m    <ClInclude Include="dividebyzeroerror.h" />[m
[32m+[m[32m    <ClInclude Include="gcd.h" />[m
[32m+[m[32m    <ClInclude Include="integer.h" />[m
[32m+[m[32m    <ClInclude Include="rational.h" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ClCompile Include="BoostTest.cpp" />[m
[32m+[m[32m    <ClCompile Include="gcd.cpp" />[m
[32m+[m[32m    <ClCompile Include="rational.cpp" />[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <None Include="packages.config" />[m
   </ItemGroup>[m
   <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />[m
   <ImportGroup Label="ExtensionTargets">[m
[32m+[m[32m    <Import Project="..\packages\boost.1.70.0.0\build\boost.targets" Condition="Exists('..\packages\boost.1.70.0.0\build\boost.targets')" />[m
   </ImportGroup>[m
[32m+[m[32m  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">[m
[32m+[m[32m    <PropertyGroup>[m
[32m+[m[32m      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>[m
[32m+[m[32m    </PropertyGroup>[m
[32m+[m[32m    <Error Condition="!Exists('..\packages\boost.1.70.0.0\build\boost.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost.1.70.0.0\build\boost.targets'))" />[m
[32m+[m[32m  </Target>[m
 </Project>[m
\ No newline at end of file[m
[1mdiff --git a/ASE_CW2/ASE_CW2.vcxproj.filters b/ASE_CW2/ASE_CW2.vcxproj.filters[m
[1mindex 4863ddb..8ec4ef7 100644[m
[1m--- a/ASE_CW2/ASE_CW2.vcxproj.filters[m
[1m+++ b/ASE_CW2/ASE_CW2.vcxproj.filters[m
[36m@@ -14,4 +14,32 @@[m
       <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>[m
     </Filter>[m
   </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ClInclude Include="dividebyzeroerror.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="gcd.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="integer.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m    <ClInclude Include="rational.h">[m
[32m+[m[32m      <Filter>Header Files</Filter>[m
[32m+[m[32m    </ClInclude>[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <ClCompile Include="gcd.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="rational.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m    <ClCompile Include="BoostTest.cpp">[m
[32m+[m[32m      <Filter>Source Files</Filter>[m
[32m+[m[32m    </ClCompile>[m
[32m+[m[32m  </ItemGroup>[m
[32m+[m[32m  <ItemGroup>[m
[32m+[m[32m    <None Include="packages.config" />[m
[32m+[m[32m  </ItemGroup>[m
 </Project>[m
\ No newline at end of file[m
[1mdiff --git a/ASE_CW2/BoostTest.cpp b/ASE_CW2/BoostTest.cpp[m
[1mnew file mode 100644[m
[1mindex 0000000..3e1308c[m
[1m--- /dev/null[m
[1m+++ b/ASE_CW2/BoostTest.cpp[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32m#define BOOST_TEST_MODULE mytests[m
[32m+[m[32m#include <boost/test/included/unit_test.hpp>[m
[32m+[m[32m#include "rational.h"[m
[32m+[m
[32m+[m[32musing namespace ExactArithmetic;[m
[32m+[m
[32m+[m
[32m+[m[32mRational x, y;[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mBOOST_AUTO_TEST_CASE(my_addition_test)[m
[32m+[m[32m{[m
[32m+[m
[32m+[m	[32mRational x = Rational::Rational(2, 3);[m
[32m+[m	[32mRational y = Rational::Rational(1, 3);[m
[32m+[m
[32m+[m	[32mRational result = 1;[m
[32m+[m
[32m+[m	[32m// Check equality of the results of two expressions[m
[32m+[m	[32mBOOST_CHECK_EQUAL((x + y), result);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mBOOST_AUTO_TEST_CASE(my_subtraction_test)[m
[32m+[m[32m{[m
[32m+[m
[32m+[m	[32mRational x = Rational::Rational(2, 3);[m
[32m+[m	[32mRational y = Rational::Rational(1, 3);[m
[32m+[m
[32m+[m	[32mRational result = Rational(1, 3);[m
[32m+[m
[32m+[m	[32m// Check equality of the results of two expressions[m
[32m+[m	[32mBOOST_CHECK_EQUAL((x - y), result);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mBOOST_AUTO_TEST_CASE(my_multiplication_test)[m
[32m+[m[32m{[m
[32m+[m
[32m+[m	[32mRational x = Rational::Rational(2, 3);[m
[32m+[m	[32mRational y = Rational::Rational(1, 3);[m
[32m+[m
[32m+[m	[32mRational result = Rational(2, 9);[m
[32m+[m
[32m+[m	[32m// Check equality of the results of two expressions[m
[32m+[m	[32mBOOST_CHECK_EQUAL((x * y), result);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32mBOOST_AUTO_TEST_CASE(my_division_test)[m
[32m+[m[32m{[m
[32m+[m
[32m+[m	[32mRational x = Rational::Rational(2, 3);[m
[32m+[m	[32mRational y = Rational::Rational(1, 3);[m
[32m+[m
[32m+[m	[32mRational result = 2;[m
[32m+[m
[32m+[m	[32m// Check equality of the results of two expressions[m
[32m+[m	[32mBOOST_CHECK_EQUAL((x / y), result);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mBOOST_AUTO_TEST_CASE(my_simplification_test)[m
[32m+[m[32m{[m
[32m+[m	[32mRational test = Rational(2, 4);[m
[32m+[m	[32mRational result = Rational(1, 2);[m
[32m+[m
[32m+[m	[32m// Check equality of the results of two expressions[m
[32m+[m	[32mBOOST_CHECK_EQUAL(test, result);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBOOST_AUTO_TEST_CASE(my_negetivenumber_test)[m
[32m+[m[32m{[m
[32m+[m	[32mRational test = Rational(-2, 4);[m
[32m+[m	[32mRational result = Rational(-1, 2);[m
[32m+[m
[32m+[m	[32m// Check equality of the results of two expressions[m
[32m+[m	[32mBOOST_CHECK_EQUAL(test, result);[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/ASE_CW2/Debug/ASE_CW2.log b/ASE_CW2/Debug/ASE_CW2.log[m
[1mnew file mode 100644[m
[1mindex 0000000..4e23cb6[m
[1m--- /dev/null[m
[1m+++ b/ASE_CW2/Debug/ASE_CW2.log[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m﻿  ASE_CW2.vcxproj -> C:\Users\YEESC\source\repos\ASE_CW2\Debug\ASE_CW2.exe[m
[1mdiff --git a/ASE_CW2/Debug/ASE_CW2.tlog/ASE_CW2.lastbuildstate b/ASE_CW2/Debug/ASE_CW2.tlog/ASE_CW2.lastbuildstate[m
[1mnew file mode 100644[m
[1mindex 0000000..83c9e0e[m
[1m--- /dev/null[m
[1m+++ b/ASE_CW2/Debug/ASE_CW2.tlog/ASE_CW2.lastbuildstate[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32m#TargetFrameworkVersion=v4.0:PlatformToolSet=v141:EnableManagedIncrementalBuild=false:VCToolArchitecture=Native32Bit:WindowsTargetPlatformVersion=10.0.17763.0[m
[32m+[m[32mDebug|Win32|C:\Users\YEESC\source\repos\ASE_CW2\|[m
[1mdiff --git a/ASE_CW2/Debug/ASE_CW2.tlog/CL.command.1.tlog b/ASE_CW2/Debug/ASE_CW2.tlog/CL.command.1.tlog[m
[1mnew file mode 100644[m
[1mindex 0000000..5f871e0[m
Binary files /dev/null and b/ASE_CW2/Debug/ASE_CW2.tlog/CL.command.1.tlog differ
[1mdiff --git a/ASE_CW2/Debug/ASE_CW2.tlog/CL.read.1.tlog b/ASE_CW2/Debug/ASE_CW2.tlog/CL.read.1.tlog[m
[1mnew file mode 100644[m
[1mindex 0000000..3f6a678[m
Binary files /dev/null and b/ASE_CW2/Debug/ASE_CW2.tlog/CL.read.1.tlog differ
[1mdiff --git a/ASE_CW2/Debug/ASE_CW2.tlog/CL.write.1.tlog b/ASE_CW2/Debug/ASE_CW2.tlog/CL.write.1.tlog[m
[1mnew file mode 100644[m
[1mindex 0000000..718506e[m
Binary files /dev/null and b/ASE_CW2/Debug/ASE_CW2.tlog/CL.write.1.tlog differ
[1mdiff --git a/ASE_CW2/Debug/ASE_CW2.tlog/link.command.1.tlog b/ASE_CW2/Debug/ASE_CW2.tlog/link.command.1.tlog[m
[1mnew file mode 100644[m
[1mindex 0000000..55d553c[m
Binary files /dev/null and b/ASE_CW2/Debug/ASE_CW2.tlog/link.command.1.tlog differ
[1mdiff --git a/ASE_CW2/Debug/ASE_CW2.tlog/link.read.1.tlog b/ASE_CW2/Debug/ASE_CW2.tlog/link.read.1.tlog[m
[1mnew file mode 100644[m
[1mindex 0000000..132d528[m
Binary files /dev/null and b/ASE_CW2/Debug/ASE_CW2.tlog/link.read.1.tlog differ
[1mdiff --git a/ASE_CW2/Debug/ASE_CW2.tlog/link.write.1.tlog b/ASE_CW2/Debug/ASE_CW2.tlog/link.write.1.tlog[m
[1mnew file mode 100644[m
[1mindex 0000000..019f31a[m
Binary files /dev/null and b/ASE_CW2/Debug/ASE_CW2.tlog/link.write.1.tlog differ
[1mdiff --git a/ASE_CW2/Debug/BoostTest.obj b/ASE_CW2/Debug/BoostTest.obj[m
[1mnew file mode 100644[m
[1mindex 0000000..2bf3189[m
Binary files /dev/null and b/ASE_CW2/Debug/BoostTest.obj differ
[1mdiff --git a/ASE_CW2/Debug/gcd.obj b/ASE_CW2/Debug/gcd.obj[m
[1mnew file mode 100644[m
[1mindex 0000000..ff37ebe[m
Binary files /dev/null and b/ASE_CW2/Debug/gcd.obj differ
[1mdiff --git a/ASE_CW2/Debug/rational-cmdline.obj b/ASE_CW2/Debug/rational-cmdline.obj[m
[1mnew file mode 100644[m
[1mindex 0000000..326c2ee[m
Binary files /dev/null and b/ASE_CW2/Debug/rational-cmdline.obj differ
[1mdiff --git a/ASE_CW2/Debug/rational-interactive.obj b/ASE_CW2/Debug/rational-interactive.obj[m
[1mnew file mode 100644[m
[1mindex 0000000..6aaa724[m
Binary files /dev/null and b/ASE_CW2/Debug/rational-interactive.obj differ
[1mdiff --git a/ASE_CW2/Debug/rational.obj b/ASE_CW2/Debug/rational.obj[m
[1mnew file mode 100644[m
[1mindex 0000000..f935cce[m
Binary files /dev/null and b/ASE_CW2/Debug/rational.obj differ
[1mdiff --git a/ASE_CW2/Debug/vc141.idb b/ASE_CW2/Debug/vc141.idb[m
[1mnew file mode 100644[m
[1mindex 0000000..92a6a4d[m
Binary files /dev/null and b/ASE_CW2/Debug/vc141.idb differ
[1mdiff --git a/ASE_CW2/Debug/vc141.pdb b/ASE_CW2/Debug/vc141.pdb[m
[1mnew file mode 100644[m
[1mindex 0000000..e2a03f0[m
Binary files /dev/null and b/ASE_CW2/Debug/vc141.pdb differ
[1mdiff --git a/ASE_CW2/packages.config b/ASE_CW2/packages.config[m
[1mnew file mode 100644[m
[1mindex 0000000..4ddf956[m
[1m--- /dev/null[m
[1m+++ b/ASE_CW2/packages.config[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32m﻿<?xml version="1.0" encoding="utf-8"?>[m
[32m+[m[32m<packages>[m
[32m+[m[32m  <package id="boost" version="1.70.0.0" targetFramework="native" />[m
[32m+[m[32m</packages>[m
\ No newline at end of file[m
[1mdiff --git a/ASE_CW2/rational-cmdline.cpp b/ASE_CW2/rational-cmdline.cpp[m
[1mdeleted file mode 100644[m
[1mindex 26d2fa3..0000000[m
[1m--- a/ASE_CW2/rational-cmdline.cpp[m
[1m+++ /dev/null[m
[36m@@ -1,67 +0,0 @@[m
[31m-#include <iostream>[m
[31m-#include <sstream>[m
[31m-#include <string>[m
[31m-[m
[31m-#include "rational.h"[m
[31m-[m
[31m-/* Basic command line interface for experimenting with rational arithmetic.[m
[31m- * Three command-line arguments are expected (in addition to the implicit file path):[m
[31m- *[m
[31m- * 1st - A string representation of a rational num